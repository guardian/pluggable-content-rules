// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The PluggableContentRules stack matches the snapshot 1`] = `
Object {
  "Metadata": Object {
    "gu:cdk:constructs": Array [
      "GuDistributionBucketParameter",
      "GuApiLambda",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": Object {
    "mylambdapluggablecontentrulesEndpoint8D930A97": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "mylambdapluggablecontentrulesF921FE35",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "mylambdapluggablecontentrulesDeploymentStageprod016B3E54",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "mylambdaE03B2284": Object {
      "DependsOn": Array [
        "mylambdaServiceRoleDefaultPolicyBDADF1CE",
        "mylambdaServiceRoleEF0A78B7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "ophan/TEST/pluggable-content-rules/pluggable-content-rules.jar",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pluggable-content-rules",
            "STACK": "ophan",
            "STAGE": "TEST",
          },
        },
        "Handler": "com.theguardian.content.rules.Lambda::handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "mylambdaServiceRoleEF0A78B7",
            "Arn",
          ],
        },
        "Runtime": "java11",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pluggable-content-rules",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pluggable-content-rules",
          },
          Object {
            "Key": "Stack",
            "Value": "ophan",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "mylambdaServiceRoleDefaultPolicyBDADF1CE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                      "/ophan/TEST/pluggable-content-rules/pluggable-content-rules.jar",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/ophan/pluggable-content-rules",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/ophan/pluggable-content-rules/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "mylambdaServiceRoleDefaultPolicyBDADF1CE",
        "Roles": Array [
          Object {
            "Ref": "mylambdaServiceRoleEF0A78B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "mylambdaServiceRoleEF0A78B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pluggable-content-rules",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pluggable-content-rules",
          },
          Object {
            "Key": "Stack",
            "Value": "ophan",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "mylambdapluggablecontentrulesANYA00FB8D7": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "mylambdaE03B2284",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "mylambdapluggablecontentrulesF921FE35",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "mylambdapluggablecontentrulesF921FE35",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "mylambdapluggablecontentrulesANYApiPermissionPluggableContentRulesmylambdapluggablecontentrules7E3552B1ANYE1390434": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "mylambdaE03B2284",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "mylambdapluggablecontentrulesF921FE35",
              },
              "/",
              Object {
                "Ref": "mylambdapluggablecontentrulesDeploymentStageprod016B3E54",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "mylambdapluggablecontentrulesANYApiPermissionTestPluggableContentRulesmylambdapluggablecontentrules7E3552B1ANY0F374BA0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "mylambdaE03B2284",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "mylambdapluggablecontentrulesF921FE35",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "mylambdapluggablecontentrulesAccountDF85129F": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "mylambdapluggablecontentrulesF921FE35",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "mylambdapluggablecontentrulesCloudWatchRole70AA2E7D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "mylambdapluggablecontentrulesCloudWatchRole70AA2E7D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pluggable-content-rules",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pluggable-content-rules",
          },
          Object {
            "Key": "Stack",
            "Value": "ophan",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "mylambdapluggablecontentrulesDeployment12D59A1B0ffec6c9cb899ed432cb4ad8168d1b01": Object {
      "DependsOn": Array [
        "mylambdapluggablecontentrulesproxyANY47BAD741",
        "mylambdapluggablecontentrulesproxy663DADE7",
        "mylambdapluggablecontentrulesANYA00FB8D7",
      ],
      "Properties": Object {
        "Description": "Pluggable content rules API",
        "RestApiId": Object {
          "Ref": "mylambdapluggablecontentrulesF921FE35",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "mylambdapluggablecontentrulesDeploymentStageprod016B3E54": Object {
      "DependsOn": Array [
        "mylambdapluggablecontentrulesAccountDF85129F",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "mylambdapluggablecontentrulesDeployment12D59A1B0ffec6c9cb899ed432cb4ad8168d1b01",
        },
        "RestApiId": Object {
          "Ref": "mylambdapluggablecontentrulesF921FE35",
        },
        "StageName": "prod",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pluggable-content-rules",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pluggable-content-rules",
          },
          Object {
            "Key": "Stack",
            "Value": "ophan",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "mylambdapluggablecontentrulesF921FE35": Object {
      "Properties": Object {
        "Description": "Pluggable content rules API",
        "Name": "ophan-TEST-pluggable-content-rules",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pluggable-content-rules",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pluggable-content-rules",
          },
          Object {
            "Key": "Stack",
            "Value": "ophan",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "mylambdapluggablecontentrulesproxy663DADE7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "mylambdapluggablecontentrulesF921FE35",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "mylambdapluggablecontentrulesF921FE35",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "mylambdapluggablecontentrulesproxyANY47BAD741": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "mylambdaE03B2284",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "mylambdapluggablecontentrulesproxy663DADE7",
        },
        "RestApiId": Object {
          "Ref": "mylambdapluggablecontentrulesF921FE35",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "mylambdapluggablecontentrulesproxyANYApiPermissionPluggableContentRulesmylambdapluggablecontentrules7E3552B1ANYproxy42073990": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "mylambdaE03B2284",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "mylambdapluggablecontentrulesF921FE35",
              },
              "/",
              Object {
                "Ref": "mylambdapluggablecontentrulesDeploymentStageprod016B3E54",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "mylambdapluggablecontentrulesproxyANYApiPermissionTestPluggableContentRulesmylambdapluggablecontentrules7E3552B1ANYproxyC7B0AF29": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "mylambdaE03B2284",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "mylambdapluggablecontentrulesF921FE35",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
